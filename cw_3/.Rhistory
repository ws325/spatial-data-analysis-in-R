#b
my_function2<-function(x){
x2<-x-mean(x)
print(x)
print(x2)
}
x<-c(1,2,3,4,5,6,7,8)
my_function2(x)
x<-c(1,1,1,1)
my_function2(x)
#Przykłady 4: Import danych i praca na danych
#a) praca z danymi z zasobów R
mtcars
summary(mtcars)
head(mtcars)
#b) Import danych *.txt
getwd()
#b) Import danych *.txt
getwd(/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia)
#b) Import danych *.txt
getwd(Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia)
#b) Import danych *.txt
getwd("/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia")
#b) Import danych *.txt
getwd()
#b) Import danych *.txt
getwd()
setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia", sep=""))
#b) Import danych *.txt
wd<-getwd()
setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia", sep=""))
setwd(paste(wd,"/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia", sep=""))
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
wd<-getwd()
#b) Import danych *.txt
wd<-getwd()
setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep=",", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
colnames(d_pogodowe)<-c("I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII") rownames(d_pogodowe)<- c(1955:2014)
#b) Import danych *.txt
getwd()
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
library(csrplus)
install.packages("csrplus")
library(csrplus)
fuji_quakes
fiji_quakes
fiji_quakes
fiji_quakes<-data.frame(quakes)
fiji_quakes
head(fiji_quakes)
tail(fiji_quakes)
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_density(color="blue")
library(ggplot2)
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_density(color="blue")
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_point()
ggplot(fiji_quakes, aes(fiji_quakes$long,fiji_quakes$lat))+geom_point()
ggplot(fiji_quakes, aes(fiji_quakes$long,fiji_quakes$lat))+geom_point()+
ggtitle("Quake Locations")+xlab("Long")+ylab("Lat")
#zad2
plot(fuji_quakes$mag,fuji_quakes$stations , main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fuji_quakes$mag,fuji_quakes$stations , main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fiji_quakes$mag,fiji_quakes$stations , main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fiji_quakes$stations, fiji_quakes$mag, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fiji_quakes$stations, fiji_quakes$mag,
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, fiji_quakes$mag+jitter(),
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag+),
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag),
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8) )
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
plot(fiji_quakes$stations, fiji_quakes$mag,
xlab="ilość stacji", ylab="magnituda", pch=19)
abline(Quake.mod)
abline(Quake.mod)
(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod)
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad3
plot(jitter(fiji_quakes$mag, factor=0.5), fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=1.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_point()+
ggtitle("Quake Locations")+xlab("Long")+ylab("Lat")
#zad2
plot(fiji_quakes$mag,fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad3
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$mag, fiji_quakes$stations )
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="magnituda", ylab="ilość stacji", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
install.packages("mosaic")
head(CPS85)
library(mosaic)
head(CPS85)
source('~/.active-rstudio-document')
names(diamonds)
load(diamonds)
load.package(diamonds)
load.package("diamonds")
load.packages("diamonds")
names(diamonds)
summary(diamonds)
class(diamonds)
type(diamonds)
#cw3
ggplot(diamonds_data, aes(price))+geom_histogram(color="blue")
#cw3
ggplot(diamonds_data, aes(diamonds_data$price))+geom_histogram(color="blue")
#cw3
ggplot(diamonds, aes(diamonds$price))+geom_histogram(color="blue")
diamonds_mean <- mean(diamonds$price)
diamonds_mean
diamonds_median<-median(diamonds$price)
diamonds_median
#cw4
doamands$price
#cw4
doamands$price
#cw4
diamands$price
#cw4
diamonds$price
diamonds_10 <- diamonds$price > 10000
diamonds_10
#cw5
mosaic::mean(diamonds$price~diamonds$clarity)
#cw4
count(filter(diamonds, diamonds$price > 10000))
#cw6
boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
gf_boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
gf_boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
ggplot(diamonds, aes(diamonds$color,diamonds$price/diamonds$carat))
#cw6
ggplot(diamonds, aes(diamonds$color,diamonds$price/diamonds$carat))+geom_boxplot()
#cw2
names(diamonds_data)
#cw1
diamonds_data<-data.frame(diamonds)
#cw2
names(diamonds_data)
#cw7
ggplot(diamonds, aes(diamonds$price,diamonds$carat))+geom_boxplot()
#cw7
ggplot(diamonds, aes(diamonds$price,diamonds$carat))+geom_boxplot()
diamonds
#cw7
ggplot(diamonds, aes(diamonds$price,diamonds$clarity))+geom_boxplot()
#cw8
xyplot(diamonds$price, diamonds$carat)
#cw8
xyplot(diamonds,diamonds$price, diamonds$carat)
#cw8
plot(diamonds$price, diamonds$carat)
#cw8
plot(diamonds$caratdiamonds$price)
#cw8
plot(diamonds$carat, diamonds$price)
#cw7
ggplot(diamonds, aes(diamonds$clarity, diamonds$price))+geom_boxplot()
#cw8
plot(diamonds$price, diamonds$carat)
#cw8
gf_point(diamonds$price, diamonds$carat)
#cw8
gf_point(diamonds$price, diamonds$carat)
#cw8
gf_point(aes(diamonds$price, diamonds$carat)
#cw8
gf_point(aes(diamonds$price, diamonds$carat))
#cw8
plot(aes(diamonds$price, diamonds$carat))
#cw8
plot(diamonds$price, diamonds$carat)
diamonds$carat
#cw8
plot(diamonds$price, diamonds$carat, pch=19)
#cw8
plot(diamonds$price, diamonds$carat, pch=19, size =3)
#cw8
plot(diamonds$price, diamonds$carat, pch=17)
#cw8
plot(diamonds$price, diamonds$carat, pch=19)
#cw9
plot(log(diamonds$price), log(diamonds$carat), pch=19)
#cw9
plot(mutate(log(diamonds$price)), log(diamonds$carat), pch=19)
#cw9
ndf = diamonds %>% mutate(log_price=log10(price), log_carat=log10(carat))
ggplot(ndf, aes(log_carat, log_price)) + geom_point()
#cw9
plot(log(diamonds$price), log(diamonds$carat), pch=19)
#cw9
ndf = diamonds %>% mutate(log_price=log10(price), log_carat=log10(carat))
ggplot(ndf, aes(log_carat, log_price)) + geom_point()
#cw10
model <- lm(log10(diamonds$price) ~ log10(diamonds$carat), data = diamonds)
fmodel(model)
#cw10
model_1 <- lm(log10(diamonds$price) ~ log10(diamonds$carat), data = diamonds)
fmodel(model_1)
#zad11
model_2 <- lm(log10(diamonds$price) ~ diamonds$color+diamonds$cut, data = diamonds)
summary(model_2)
#cw9
ndf = diamonds %>% mutate(log_price=log10(diamonds$price), log_carat=log10(diamonds$carat))
ggplot(ndf, aes(log_carat, log_price)) + geom_point()
library(MASS)
data<-survey
data
library("MASS")
data<-survey
data
tail(data)
mean(data$Age)
mean(data$Age, na.rm=TRUE)
sd(data$Age, na.rm=TRUE)
round(data_mean+c(-1,1)*sigma/sqrt(32)*qnorm(.975),2)
data_mean<-mean(data$Age, na.rm=TRUE)
sigma<-sd(data$Age, na.rm=TRUE)
round(data_mean+c(-1,1)*sigma/sqrt(32)*qnorm(.975),2)
round(data_mean+c(-1,1)*sigma/sqrt(237)*qnorm(.975),2)
round(data_mean+c(-1,1)*sigma/sqrt(168)*qnorm(.975),2)
count(survey)
count(survey)
count(survey)
data<-na.omit(survey)
data
count(data)
#zad2
round(data_mean+c(-1,1)*sigma/sqrt(168)*qnorm(.975),2)
funn(2,4)
fun<-function(x,y){
return 2*x+y
}
fun<-function(x,y)
{
return 2*x+y
}
fun<-function(x,y)
{
return( 2*x+y )
}
funn(2,4)
fun(2,4)
#zad. 1
vec_1 <- seq(-2,2,0.01)
vec_1
dnorm(vec_1)
plot(dnorm(vec_1))
plot(vec_1, dnorm(vec_1))
plot(vec_1, dnorm(vec_1))+x_label("x")
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa")
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", type=1)
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", type='1')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", type='15')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa")
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", type='d')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", main='type="d"')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", main='type="l"')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", main='type="l"')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", main='type="l"')
plot(vec_1, dnorm(vec_1), xlab = "x", ylab = "Gestosc prawdopodobienstwa", main='type="3"')
#zad. 2
plot(pnorm(vec_1))
#zad. 3
library("sp")
readRDS("ca_geo.rds")
setwd("~/Desktop/Studia/V semestr/Analiza danych przrstrzennych/cw_3")
readRDS("ca_geo.rds")
readRDS("ca_geo.rds", refhook = NULL)
class(data)
data<-readRDS("ca_geo.rds", refhook = NULL)
class(data)
data<-readRDS("ca_geo.rds", refhook = NULL)
class(data)
data_fra<-data.frame(data)
class(data_fra)
data<-readRDS("ca_geo.rds", refhook = NULL)
class(data)
data_fra<-data.frame(data)
class(data_fra)
#zad. 4
summary(data_fra)
data_fra
data_fra["pH"]
#srednia
mean(data_fra)
#srednia
mean(data_fra["pH"])
#zakres wartości zmiennej
pH<-data_fra["pH"]
#srednia
mean(pH)
#srednia
mean(pH, na.rm=FALSE)
#zakres wartości zmiennej
pH<-data_fra["pH"]
#srednia
mean(pH, na.rm=FALSE)
pH
#srednia
mean(pH, na.rm=TRUE)
class(pH)
#srednia
mean(data_fra["pH"], na.rm=TRUE)
#srednia
mean(data_fra$pH, na.rm=TRUE)
#zad. 4
summary(data_fra)
#zad. 4
summary(data_fra$pH)
#zakres wartości zmiennej
data_fra["pH"]
summary(data_fra$pH)
sd(data_fra$pH)
sd(data_fra$pH)
sapply(data_fra$pH, sd, na.rm=TRUE)
sapply(data_fra$pH, sd, na.rm=FALSE)
sapply(pH, sd, na.rm=FALSE)
#zakres wartości zmiennej
pH<-data_fra["pH"]
sapply(pH, sd, na.rm=FALSE)
sd(pH)
sd(data_fra$pH)
#zad. 5
histogram <- hist(pH, breaks=20)
#zad. 5
histogram <- hist(data_fra["pH"], breaks=20)
#zad. 5
histogram <- hist(data_fra$pH, breaks=20)
sapply(data_fra$pH, sd, na.rm=FALSE)
#zad. 5
histogram <- hist(data_fra$pH, breaks=20)
#zad. 5
histogram <- hist(data_fra$pH, breaks=10)
#zad. 5
histogram <- hist(data_fra$pH, breaks=20)
#zad. 6
density(data_fra$pH)
#zad. 6
density(data_fra$pH, na.rm=TRUE)
#zad. 6
density(data_fra$pH, na.rm=FALSE)
#zad. 6
density(data_fra$pH, na.rm=TRUE)
#zad. 7
boxplot(data_fra$pH, data=data_fra)
#zad. 7
boxplot(data_fra$pH, data_fra)
#zad. 7
boxplot(data_fra$pH, data=data_fra, varwidth = TRUE, log = "y", las = 1)
#zad. 7
boxplot(data_fra$pH, data=data_fra, varwidth = TRUE, log = "y", las = 3)
#zad. 7
boxplot(data_fra$pH, data=data_fra, varwidth = TRUE, log = "y")
#zad. 7
boxplot(data_fra$pH, data=data_fra, varwidth = TRUE)
tittle("Wykres dla zmiennej pH")
#zad. 7
boxplot(data_fra$pH, data=data_fra, varwidth = TRUE)
tittle("Wykres dla zmiennej pH")
title("Wykres dla zmiennej pH")
#zad. 8
stand<-scale(data_fra$pH)
histogram_2 <- hist(stand, breaks=20)
#zad. 9
shapiro.test(data_fra$pH)
#srednia
mean(data_fra$pH, na.rm=TRUE)
sd(data_fra$pH)
sapply(data_fra$pH, sd, na.rm=FALSE)
sd(data_fra$pH)
sd(data_fra$pH, na.rm=TRUE)
sapply(data_fra$pH, sd, na.rm=TRUE)
IQR(data_fra$pH, na.rm=TRUE)
#zakres wartości zmiennej
pH<-data_fra["pH"]
#zakres wartości zmiennej
data_fra["pH"]
#zakres wartości zmiennej
data_fra$pH
#zakres wartości zmiennej
data_fra["pH"]
#zakres wartości zmiennej
pH<-data_fra["pH"]
pH
#zakres wartości zmiennej
summary(data_fra$pH)
#srednia
mean(data_fra$pH, na.rm=TRUE)
#zad. 9
shapiro.test(data_fra$pH)
