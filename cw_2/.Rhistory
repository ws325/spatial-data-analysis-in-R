names(film_list)<-c("title", "actors", "revievs")
film_list
film_list[["actors"]]
film_list$actors[[2]]
film_list["actors"]
film_list$actors[2]
film_list$actors
film_list$actors[2]
#b
title<-"The Shining"
actors<-c("Jack Nicholson", "Shelly Duvall", "Danny Lloyd", "Scatman Crothers", "Barry Nelson")
reviews<-factor(c("Good", "OK", "Good", "Perfect", "Bad", "Perfect", "Good"), ordered = TRUE, levels = c("Bad", "OK", "Good", "Perfect"))
film_list<-list(title, actors, reviews)
film_list
names(film_list)<-c("title", "actors", "revievs")
film_list
film_list$actors
film_list$actors[2]
#zadanie 3
#a
my_function<-function(x){
cale<-x*39.3700787
stopy<-x*3.2808399
cat("Zmiana metrów na cale:")
print(cale)
cat("Zmiana metrów na stopy:")
print(stopy)
}
x<-16
my_function(x)
#b
my_function2<-function(x){
x2<-x-mean(x)
print(x)
print(x2)
}
x<-c(1,2,3,4,5,6,7,8)
my_function2(x)
x<-c(1,1,1,1)
my_function2(x)
#Przykłady 4: Import danych i praca na danych
#a) praca z danymi z zasobów R
mtcars
summary(mtcars)
head(mtcars)
#b) Import danych *.txt
getwd()
#b) Import danych *.txt
getwd(/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia)
#b) Import danych *.txt
getwd(Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia)
#b) Import danych *.txt
getwd("/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia")
#b) Import danych *.txt
getwd()
#b) Import danych *.txt
getwd()
setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia", sep=""))
#b) Import danych *.txt
wd<-getwd()
setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia", sep=""))
setwd(paste(wd,"/Programowanie_w_R_i_wizualizacja_danych/Ćwiczenia", sep=""))
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
wd<-getwd()
#b) Import danych *.txt
wd<-getwd()
setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="\t", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep=",", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
#setwd(paste(wd,"/Users/wiktorsroczynski/Desktop/Studia", sep=""))
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
colnames(d_pogodowe)<-c("I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII") rownames(d_pogodowe)<- c(1955:2014)
#b) Import danych *.txt
getwd()
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
#b) Import danych *.txt
getwd()
d_pogodowe <- read.delim("dane_pogodowe.txt", sep="/t", header=FALSE)
library(csrplus)
install.packages("csrplus")
library(csrplus)
fuji_quakes
fiji_quakes
fiji_quakes
fiji_quakes<-data.frame(quakes)
fiji_quakes
head(fiji_quakes)
tail(fiji_quakes)
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_density(color="blue")
library(ggplot2)
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_density(color="blue")
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_point()
ggplot(fiji_quakes, aes(fiji_quakes$long,fiji_quakes$lat))+geom_point()
ggplot(fiji_quakes, aes(fiji_quakes$long,fiji_quakes$lat))+geom_point()+
ggtitle("Quake Locations")+xlab("Long")+ylab("Lat")
#zad2
plot(fuji_quakes$mag,fuji_quakes$stations , main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fuji_quakes$mag,fuji_quakes$stations , main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fiji_quakes$mag,fiji_quakes$stations , main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fiji_quakes$stations, fiji_quakes$mag, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
#zad2
plot(fiji_quakes$stations, fiji_quakes$mag,
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, fiji_quakes$mag+jitter(),
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag+),
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag),
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8) )
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
plot(fiji_quakes$stations, fiji_quakes$mag,
xlab="ilość stacji", ylab="magnituda", pch=19)
abline(Quake.mod)
abline(Quake.mod)
(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod)
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad3
plot(jitter(fiji_quakes$mag, factor=0.5), fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$stations ~ fiji_quakes$mag, data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=1.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
ggplot(fiji_quakes, aes(fiji_quakes$lat,fiji_quakes$long))+geom_point()+
ggtitle("Quake Locations")+xlab("Long")+ylab("Lat")
#zad2
plot(fiji_quakes$mag,fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=19)
#zad3
plot(fiji_quakes$stations, jitter(fiji_quakes$mag, factor=0.5),
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad3
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$mag, fiji_quakes$stations )
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="ilość stacji", ylab="magnituda", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
#zad4
Quake.mod = lm(fiji_quakes$mag~fiji_quakes$stations , data = fiji_quakes)
plot(jitter(fiji_quakes$mag, factor=0.5),fiji_quakes$stations,
xlab="magnituda", ylab="ilość stacji", pch=20, col=rgb(0.1, 0.2, 0.8, 0.3) )
abline(Quake.mod, col="red")
summary(Quake.mod)
install.packages("mosaic")
head(CPS85)
library(mosaic)
head(CPS85)
source('~/.active-rstudio-document')
names(diamonds)
load(diamonds)
load.package(diamonds)
load.package("diamonds")
load.packages("diamonds")
names(diamonds)
summary(diamonds)
class(diamonds)
type(diamonds)
#cw3
ggplot(diamonds_data, aes(price))+geom_histogram(color="blue")
#cw3
ggplot(diamonds_data, aes(diamonds_data$price))+geom_histogram(color="blue")
#cw3
ggplot(diamonds, aes(diamonds$price))+geom_histogram(color="blue")
diamonds_mean <- mean(diamonds$price)
diamonds_mean
diamonds_median<-median(diamonds$price)
diamonds_median
#cw4
doamands$price
#cw4
doamands$price
#cw4
diamands$price
#cw4
diamonds$price
diamonds_10 <- diamonds$price > 10000
diamonds_10
#cw5
mosaic::mean(diamonds$price~diamonds$clarity)
#cw4
count(filter(diamonds, diamonds$price > 10000))
#cw6
boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
gf_boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
gf_boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
boxplot(diamonds$color, diamonds$price/diamonds$carat)
#cw6
ggplot(diamonds, aes(diamonds$color,diamonds$price/diamonds$carat))
#cw6
ggplot(diamonds, aes(diamonds$color,diamonds$price/diamonds$carat))+geom_boxplot()
#cw2
names(diamonds_data)
#cw1
diamonds_data<-data.frame(diamonds)
#cw2
names(diamonds_data)
#cw7
ggplot(diamonds, aes(diamonds$price,diamonds$carat))+geom_boxplot()
#cw7
ggplot(diamonds, aes(diamonds$price,diamonds$carat))+geom_boxplot()
diamonds
#cw7
ggplot(diamonds, aes(diamonds$price,diamonds$clarity))+geom_boxplot()
#cw8
xyplot(diamonds$price, diamonds$carat)
#cw8
xyplot(diamonds,diamonds$price, diamonds$carat)
#cw8
plot(diamonds$price, diamonds$carat)
#cw8
plot(diamonds$caratdiamonds$price)
#cw8
plot(diamonds$carat, diamonds$price)
#cw7
ggplot(diamonds, aes(diamonds$clarity, diamonds$price))+geom_boxplot()
#cw8
plot(diamonds$price, diamonds$carat)
#cw8
gf_point(diamonds$price, diamonds$carat)
#cw8
gf_point(diamonds$price, diamonds$carat)
#cw8
gf_point(aes(diamonds$price, diamonds$carat)
#cw8
gf_point(aes(diamonds$price, diamonds$carat))
#cw8
plot(aes(diamonds$price, diamonds$carat))
#cw8
plot(diamonds$price, diamonds$carat)
diamonds$carat
#cw8
plot(diamonds$price, diamonds$carat, pch=19)
#cw8
plot(diamonds$price, diamonds$carat, pch=19, size =3)
#cw8
plot(diamonds$price, diamonds$carat, pch=17)
#cw8
plot(diamonds$price, diamonds$carat, pch=19)
#cw9
plot(log(diamonds$price), log(diamonds$carat), pch=19)
#cw9
plot(mutate(log(diamonds$price)), log(diamonds$carat), pch=19)
#cw9
ndf = diamonds %>% mutate(log_price=log10(price), log_carat=log10(carat))
ggplot(ndf, aes(log_carat, log_price)) + geom_point()
#cw9
plot(log(diamonds$price), log(diamonds$carat), pch=19)
#cw9
ndf = diamonds %>% mutate(log_price=log10(price), log_carat=log10(carat))
ggplot(ndf, aes(log_carat, log_price)) + geom_point()
#cw10
model <- lm(log10(diamonds$price) ~ log10(diamonds$carat), data = diamonds)
fmodel(model)
#cw10
model_1 <- lm(log10(diamonds$price) ~ log10(diamonds$carat), data = diamonds)
fmodel(model_1)
#zad11
model_2 <- lm(log10(diamonds$price) ~ diamonds$color+diamonds$cut, data = diamonds)
summary(model_2)
#cw9
ndf = diamonds %>% mutate(log_price=log10(diamonds$price), log_carat=log10(diamonds$carat))
ggplot(ndf, aes(log_carat, log_price)) + geom_point()
library(MASS)
data<-survey
data
library("MASS")
data<-survey
data
tail(data)
mean(data$Age)
mean(data$Age, na.rm=TRUE)
sd(data$Age, na.rm=TRUE)
round(data_mean+c(-1,1)*sigma/sqrt(32)*qnorm(.975),2)
data_mean<-mean(data$Age, na.rm=TRUE)
sigma<-sd(data$Age, na.rm=TRUE)
round(data_mean+c(-1,1)*sigma/sqrt(32)*qnorm(.975),2)
round(data_mean+c(-1,1)*sigma/sqrt(237)*qnorm(.975),2)
round(data_mean+c(-1,1)*sigma/sqrt(168)*qnorm(.975),2)
count(survey)
count(survey)
count(survey)
data<-na.omit(survey)
data
count(data)
#zad2
round(data_mean+c(-1,1)*sigma/sqrt(168)*qnorm(.975),2)
funn(2,4)
fun<-function(x,y){
return 2*x+y
}
fun<-function(x,y)
{
return 2*x+y
}
fun<-function(x,y)
{
return( 2*x+y )
}
funn(2,4)
fun(2,4)
A=(1:20)
B=(20:1)
C=A+B
C
B
#zad 2
D=(0:100:11)
#zad 2
D=(0:101:11)
#zad 2
D=(0:100:-11)
#zad 2
D=(0:100:-11)
#zad 2
D=seq(0,100,by=11)
D
#zad 3
library(rivers)
#zad 3
rivers
suma<-sum(rivers)
suma
suma
srednia<-
mediana<-median(rivers, na.rm = FALSE)
wariancja<-sv(rivers)
wariancja<-sd(rivers)
wariancja<-var(rivers)
odch_stand
odch_stand<-sd(rivers, na.rm = FALSE)
odch_stand
max<-max(rivers, na.rm=FALSE)
vector<-c(suma, srednia, mediana, wariancja, odch_stand, min, max)
vector
#zad 5
dane <- read.table(file = "gravity.txt", sep="\t", dec=",", header=TRUE)
getwd()
setwd("~/Desktop/Studia/V semestr/Analiza danych przrstrzennych/cw_2")
#zad 5
dane <- read.table(file = "gravity.txt", sep="\t", dec=",", header=TRUE)
dane
dane
#zad 5
dane <- read.table(file = "gravity.txt", sep="\t", dec=",", header=TRUE)
#zad 5
dane <- read.table(file = "gravity.txt")
dane
dane<-dane[c("X", "grav_modeled", "grav_measured"),]
dane
names(dane)<-c("X", "grav_modeled", "grav_measured")
dane
#zad 5
dane <- read.table(file = "gravity.txt")
dane
names(dane)<-c("X", "grav_modeled", "grav_measured")
dane
library(ggplot2)
ggplot(dane, aes(grav_measured, colour = class)) +
geom_point()
ggplot(dane, aes(grav_measured)) +
geom_point()
ggplot(dane, grav_measured) +
geom_point()
ggplot(dane, aes(x=X, y=grav_measured) +
ggplot(dane, aes(x=X, y=grav_measured)) + geom_point()
ggplot(dane, aes(x=X, y=grav_measured)) + geom_point()
ggplot(dane, aes(x=X, y=grav_measured)) + geom_point()
ggplot(dane, aes(x=X, y=grav_measured)) + geom_point(size=2, shape=23)
ggplot(dane, aes(x=X, y=grav_measured)) + geom_point(size=2, shape=23, color="blue")
ggplot(dane, aes(x=X, y=grav_modeled)) + geom_point(size=2, color="red")
r<-funkcja_1(2,3)
#zad 6
funkcja_1 =  function(x, y)
{
return(x**y)
}
r<-funkcja_1(2,3)
r
data_frame(vec_1, vec_2, vec_3, vec_4, vec_5)
#zad 7
vec_1 <- c("imie", "plec", "kierunek", "rok")
vec_2 <- c( "Kasia", "K", "GF", "3")
vec_3 <- c( "Ewa", "K", "GIN", "1")
vec_4 <- c( "Jan", "M", "INF", "2")
vec_5 <- c( "Piotr", "M", "GF", "4")
data_frame(vec_1, vec_2, vec_3, vec_4, vec_5)
#zad 8
diamonds
summary(diamonds)
colnames(diamonds)
length(weather)
#zad 8
diamonds
summary(diamonds)
colnames(diamonds)
rownames(diamonds)
length(diamonds)
dim(dianmonds)
dim(diamonds)
#zad 9
filter(diamonds, diamonds$carat > 0.8)
#zad 9
filter(diamonds, diamonds$carat > 0.8)
#zad 10
arrange(diamonds, carat)
#zad 7
vec_1 <- c("imie", "plec", "kierunek", "rok")
vec_2 <- c( "Kasia", "K", "GF", "3")
vec_3 <- c( "Ewa", "K", "GIN", "1")
vec_4 <- c( "Jan", "M", "INF", "2")
vec_5 <- c( "Piotr", "M", "GF", "4")
data_frame(vec_1, vec_2, vec_3, vec_4, vec_5)
ggplot(dane) + geom_point(aes(x=X, y=grav_measured),size=2, shape=23, color="blue")+geom_line(aes(x=X, y=grav_modeled), size=2, color="red")
histogram <- hist(vector, breaks=20)
histogram <- hist(rivers, breaks=20)
ggplot(dane) + geom_point(aes(x=X, y=grav_measured),size=2, shape=23, color="blue")+geom_line(aes(x=X, y=grav_modeled), size=2, color="red")
histogram <- hist(rivers, breaks=20)
source('~/.active-rstudio-document')
